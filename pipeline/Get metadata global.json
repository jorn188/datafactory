{
	"name": "Get metadata global",
	"properties": {
		"activities": [
			{
				"name": "Get metadata global",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "bikedata",
						"type": "DatasetReference"
					},
					"fieldList": [
						"itemName",
						"lastModified",
						"itemType",
						"childItems",
						"itemType"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Filter child items",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get metadata global",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get metadata global').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@contains(item().name,'csv')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEachCSV",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter child items",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('filter child items').output.Value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Get Metadata 2",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "delimitedtextfiles",
									"type": "DatasetReference",
									"parameters": {
										"filename": "@item().name"
									}
								},
								"fieldList": [
									"itemName",
									"size"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get Metadata 2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "var11",
								"value": {
									"value": "@{activity('Get Metadata 2').output}",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Lookup1",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Set variable1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "INSERT INTO dbo.metadata(name, size) VALUES (@{variables('var11').itemName},@{variables('var11').size})",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "metadb",
									"type": "DatasetReference"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"var11": {
				"type": "String"
			}
		},
		"folder": {
			"name": "metadata"
		},
		"annotations": [],
		"lastPublishTime": "2021-05-03T12:04:52Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}